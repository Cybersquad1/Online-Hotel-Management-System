#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HotelDB")]
	public partial class RoomDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertRoomType(RoomType instance);
    partial void UpdateRoomType(RoomType instance);
    partial void DeleteRoomType(RoomType instance);
    #endregion
		
		public RoomDataContext() : 
				base(global::DataAccessLayer.Properties.Settings.Default.HotelDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RoomDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoomDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoomDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RoomDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<RoomType> RoomTypes
		{
			get
			{
				return this.GetTable<RoomType>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ModifyRoom")]
		public int sp_ModifyRoom([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomID", DbType="Int")] System.Nullable<int> roomID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomDesc", DbType="VarChar(30)")] string roomDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomCharges", DbType="Decimal(18,0)")] System.Nullable<decimal> roomCharges, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomServices", DbType="VarChar(50)")] string roomServices)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roomID, roomDesc, roomCharges, roomServices);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_AddRoom")]
		public int sp_AddRoom([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomDesc", DbType="VarChar(30)")] string roomDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomCharges", DbType="Decimal(18,0)")] System.Nullable<decimal> roomCharges, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomServices", DbType="VarChar(50)")] string roomServices, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomTypeID", DbType="Int")] System.Nullable<int> roomTypeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), roomDesc, roomCharges, roomServices, roomTypeID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomID;
		
		private string _RoomDescription;
		
		private System.Nullable<int> _RoomTypeID;
		
		private decimal _RoomCharges;
		
		private string _RoomServices;
		
		private EntityRef<RoomType> _RoomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomIDChanging(int value);
    partial void OnRoomIDChanged();
    partial void OnRoomDescriptionChanging(string value);
    partial void OnRoomDescriptionChanged();
    partial void OnRoomTypeIDChanging(System.Nullable<int> value);
    partial void OnRoomTypeIDChanged();
    partial void OnRoomChargesChanging(decimal value);
    partial void OnRoomChargesChanged();
    partial void OnRoomServicesChanging(string value);
    partial void OnRoomServicesChanged();
    #endregion
		
		public Room()
		{
			this._RoomType = default(EntityRef<RoomType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					this.OnRoomIDChanging(value);
					this.SendPropertyChanging();
					this._RoomID = value;
					this.SendPropertyChanged("RoomID");
					this.OnRoomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomDescription", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RoomDescription
		{
			get
			{
				return this._RoomDescription;
			}
			set
			{
				if ((this._RoomDescription != value))
				{
					this.OnRoomDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RoomDescription = value;
					this.SendPropertyChanged("RoomDescription");
					this.OnRoomDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTypeID", DbType="Int")]
		public System.Nullable<int> RoomTypeID
		{
			get
			{
				return this._RoomTypeID;
			}
			set
			{
				if ((this._RoomTypeID != value))
				{
					if (this._RoomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoomTypeID = value;
					this.SendPropertyChanged("RoomTypeID");
					this.OnRoomTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCharges", DbType="Decimal(18,0) NOT NULL")]
		public decimal RoomCharges
		{
			get
			{
				return this._RoomCharges;
			}
			set
			{
				if ((this._RoomCharges != value))
				{
					this.OnRoomChargesChanging(value);
					this.SendPropertyChanging();
					this._RoomCharges = value;
					this.SendPropertyChanged("RoomCharges");
					this.OnRoomChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomServices", DbType="VarChar(50)")]
		public string RoomServices
		{
			get
			{
				return this._RoomServices;
			}
			set
			{
				if ((this._RoomServices != value))
				{
					this.OnRoomServicesChanging(value);
					this.SendPropertyChanging();
					this._RoomServices = value;
					this.SendPropertyChanged("RoomServices");
					this.OnRoomServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomType_Room", Storage="_RoomType", ThisKey="RoomTypeID", OtherKey="RoomTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public RoomType RoomType
		{
			get
			{
				return this._RoomType.Entity;
			}
			set
			{
				RoomType previousValue = this._RoomType.Entity;
				if (((previousValue != value) 
							|| (this._RoomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoomType.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._RoomType.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._RoomTypeID = value.RoomTypeID;
					}
					else
					{
						this._RoomTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomType")]
	public partial class RoomType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoomTypeID;
		
		private string _RoomType1;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoomTypeIDChanging(int value);
    partial void OnRoomTypeIDChanged();
    partial void OnRoomType1Changing(string value);
    partial void OnRoomType1Changed();
    #endregion
		
		public RoomType()
		{
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoomTypeID
		{
			get
			{
				return this._RoomTypeID;
			}
			set
			{
				if ((this._RoomTypeID != value))
				{
					this.OnRoomTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoomTypeID = value;
					this.SendPropertyChanged("RoomTypeID");
					this.OnRoomTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RoomType", Storage="_RoomType1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RoomType1
		{
			get
			{
				return this._RoomType1;
			}
			set
			{
				if ((this._RoomType1 != value))
				{
					this.OnRoomType1Changing(value);
					this.SendPropertyChanging();
					this._RoomType1 = value;
					this.SendPropertyChanged("RoomType1");
					this.OnRoomType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomType_Room", Storage="_Rooms", ThisKey="RoomTypeID", OtherKey="RoomTypeID")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.RoomType = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.RoomType = null;
		}
	}
}
#pragma warning restore 1591
